import EXOSIMS, EXOSIMS.MissionSim, os.path
import pandas as pd
import astropy.units as u
import matplotlib.pyplot as plt
import numpy as np
import matplotlib as mpl

scriptfile = os.path.join(
    EXOSIMS.__path__[0], "Scripts", "multiOcculterScript_test.json"
)
sim = EXOSIMS.MissionSim.MissionSim(scriptfile)

#sInds_2 = [21, 134, 137, 195, 207, 208, 269, 277, 284, 304, 344, 345, 356, 369, 370, 372, 393, 402, 421, 422, 429, 430, 438, 440, 442, 450, 453, 462, 463, 464, 468, 472, 473, 479, 484, 486, 487, 490, 492, 500, 501]
#sInds_2 = [34,56,23,123,467,90,567,167,879,345,12,1,40,45,190,30,31,32,33,34,35,36,37,338,339,670,102,111]
#sInds_2 = [4, 7, 8, 13, 16, 19, 20, 21, 23, 26, 27, 39, 40, 45, 46, 48, 50, 51, 52, 54, 55, 59, 60, 62, 63, 74, 75, 80, 82, 83, 88, 92, 93, 96, 97, 98, 101, 102, 103, 110, 111, 113, 120, 122, 131, 134, 135, 136, 137, 144, 147, 150, 158, 160, 164, 167, 169, 174, 179, 181, 182, 183, 184, 186, 195, 197, 198, 200, 204, 207, 208, 210, 213, 214, 217, 231, 236, 237, 238, 242, 244, 257, 261, 262, 265, 269, 277, 280, 282, 284, 290, 292, 294, 296, 299, 303, 306, 307, 308, 312, 313, 314, 318, 322, 325, 328, 334, 339, 341, 344, 345, 346, 347, 349, 350, 352, 353, 357, 361, 365, 368, 369, 370, 376, 377, 378, 379, 390, 391, 393, 394, 395, 397, 400, 402, 404, 407, 408, 410, 412, 413, 414, 418, 419, 421, 426, 427, 429, 430, 431, 432, 434, 437, 438, 439, 441, 442, 450, 453, 455, 459, 461, 462, 463, 464, 466, 467]
#sInds_2 = [4, 7, 10, 13, 16, 20, 21, 28, 33, 37, 46, 52, 54, 60, 82, 88, 92, 96, 101, 102, 103, 111, 113, 131, 134, 137, 144, 147, 161, 164, 169, 177, 179, 186, 190, 191, 195, 198, 204, 207, 208, 210, 214, 216, 217, 233, 236, 261, 265, 267, 269, 270, 271, 275, 277, 281, 282, 284, 290, 292, 303, 304, 306, 307, 308, 312, 313, 322, 325, 328, 334, 339, 341, 344, 345, 346, 347, 349, 350, 353, 356, 361, 368, 369, 370, 372, 377, 378, 391, 393, 394, 395, 402, 404, 407, 410, 412, 413, 419, 421, 422, 426, 429, 430, 434, 437, 438, 439, 440, 442, 444, 445, 450, 453, 462, 463, 464, 468, 472, 473, 479, 484, 486, 487, 489, 490, 492, 500, 501]
#sInds_2 = [21, 46, 101, 134, 137, 144, 147, 164, 169, 179, 195, 207, 208, 218, 241, 246, 249, 256, 269, 277, 284, 289, 294, 304, 321, 330, 344, 345, 352, 356, 361, 369, 370, 372, 381, 385, 389, 391, 393, 395, 402, 407, 414, 418, 421, 422, 427, 429, 430, 438, 440, 441, 442, 450, 453, 462, 463, 464, 468, 472, 473, 479, 484, 486, 487]
#sInds_2 = [4, 7, 13, 16, 20, 21, 46, 52, 54, 60, 81, 82, 88, 89, 92, 96, 101, 102, 103, 106, 111, 113, 115, 118, 131, 134, 137, 138, 144, 147, 148, 164, 167, 169, 174, 179, 186, 190, 191, 195, 198, 204, 207, 208, 210, 214, 217, 231, 236, 242, 244, 261, 265, 267, 269, 277, 282, 284, 290, 292, 303, 304, 306, 307, 308, 312, 313, 322, 325, 328, 334, 339, 341, 344, 345, 346, 347, 349, 350, 353, 356, 361, 368, 369, 370, 372, 377, 378, 391, 393, 394, 395, 402, 404, 407, 410, 412, 413, 419, 421, 422, 426, 429, 430, 434, 437, 438, 439, 440, 442, 444, 445, 450, 453, 462, 463, 464, 468, 472, 473, 479, 484, 486, 487, 489, 490, 492, 500, 501, 506, 508, 509, 510]
#sInds_2 = [24, 153, 488]
sInds_2 = [0, 1, 4, 5, 7, 8, 9, 13, 16, 19, 23, 26, 27, 38, 39, 40, 45, 48, 49, 50, 51, 53, 55, 58, 60, 62, 63, 71, 74, 75, 80, 83, 88, 93, 94, 97, 98, 110, 113, 116, 120, 121, 122, 135, 136, 142, 150, 155, 158, 160, 166, 167, 174, 181, 182, 183, 184, 191, 197, 198, 200, 204, 210, 213, 214, 217, 230, 231, 236, 237, 238, 242, 244, 252, 257, 261, 262, 265, 267, 270, 271, 274, 275, 280, 281, 282, 290, 292, 296, 299, 303, 306, 307, 308, 312, 313, 314, 315, 318, 322, 325, 334, 347, 357, 365, 379]
b = np.zeros((len(sInds_2),2))

for i in range(len(sInds_2)):
    b[i,0] = sim.TargetList.coords[sInds_2[i]].ra.wrap_at(180 * u.deg).radian
    b[i,1] = sim.TargetList.coords[sInds_2[i]].dec.radian
r_2 = b[:,0]
d_2 = b[:,1]
koMap = sim.SurveySimulation.koMaps['occulter_1'].astype(int)

a = np.zeros((len(sim.TargetList.coords), 2))


fig, ax = plt.subplots()
cmap = mpl.colors.ListedColormap(['r', 'k'])
ax.imshow(koMap)

plt.figure()
plt.subplot(111, projection="mollweide")
plt.grid(True)
plt.scatter(r_2,d_2)
plt.show()
